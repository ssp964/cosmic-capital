{"version":3,"file":"fcl.module.js","sources":["../src/utils/async.ts","../src/discovery/rpc/requests.ts","../src/discovery/rpc/handlers/exec-service.ts","../src/discovery/rpc/handlers/request-wc-qr.ts","../src/discovery/rpc/client.ts","../src/discovery/exec-discovery.ts","../src/discovery/exec-hook.ts","../src/utils/walletconnect/loader.ts","../src/client.ts","../src/utils/web/render-frame.js","../src/utils/web/render-pop.js","../src/utils/web/render-tab.js","../src/utils/web/default-config.js","../src/utils/web/strategies/utils/frame.js","../src/VERSION.ts","../src/utils/web/strategies/iframe-rpc.js","../src/utils/web/strategies/utils/pop.js","../src/utils/web/strategies/pop-rpc.js","../src/utils/web/strategies/utils/tab.js","../src/utils/web/strategies/tab-rpc.js","../src/utils/web/strategies/utils/extension.js","../src/utils/web/strategies/ext-rpc.js","../src/utils/web/exec-local.js","../src/utils/web/coreStrategies.js","../src/utils/web/storage.ts","../src/fcl.ts"],"sourcesContent":["const AbortController =\n  globalThis.AbortController || require(\"abort-controller\")\n\nexport function wrapAbortSignal(signal?: AbortSignal) {\n  const controller = new AbortController()\n  if (signal?.aborted) controller.abort()\n  signal?.addEventListener(\"abort\", () => controller.abort())\n  return controller\n}\n","import {RpcClient, RpcNotification} from \"@onflow/util-rpc\"\n\nexport type DiscoveryRpc = RpcClient<{}, DiscoveryNotifications>\n\nexport enum DiscoveryNotification {\n  NOTIFY_QRCODE_CONNECTING = \"notifyQrCodeConnecting\",\n  NOTIFY_QRCODE_CONNECTED = \"notifyQrCodeConnected\",\n  NOTIFY_QRCODE_ERROR = \"notifyQrCodeError\",\n}\n\nexport enum FclRequest {\n  REQUEST_WALLETCONNECT_QRCODE = \"requestWalletConnectQrCode\",\n  EXEC_SERVICE = \"execService\",\n}\n\nexport type DiscoveryNotifications = {\n  [DiscoveryNotification.NOTIFY_QRCODE_CONNECTING]: RpcNotification<{\n    uri: string\n  }>\n  [DiscoveryNotification.NOTIFY_QRCODE_CONNECTED]: RpcNotification<{\n    uri: string\n  }>\n  [DiscoveryNotification.NOTIFY_QRCODE_ERROR]: RpcNotification<{\n    uri: string\n    error: string\n  }>\n}\n","import {execStrategy, normalizePollingResponse} from \"@onflow/fcl-core\"\nimport {Service} from \"@onflow/typedefs\"\n\nconst APPROVED = \"APPROVED\"\n\n// RPC handler for handling service execution requests (e.g extension service)\nexport const execServiceHandlerFactory =\n  ({\n    onExecResult,\n    execStrategyOpts,\n    execStrategyArgs,\n    abortSignal,\n  }: {\n    onExecResult: (result: any) => void\n    execStrategyOpts: any\n    execStrategyArgs: any\n    abortSignal: AbortSignal\n  }) =>\n  async ({service}: {service: Service}) => {\n    try {\n      const result = await (execStrategy as any)(\n        {\n          ...execStrategyOpts,\n          service,\n          config: execStrategyOpts.config,\n          abortSignal,\n        },\n        // Pass the rest of the arguments (protect against future changes)\n        ...execStrategyArgs.slice(1)\n      )\n\n      const status = normalizePollingResponse(result)?.status || APPROVED\n      if (status === APPROVED) {\n        // Propogrates the result to the execStrategy hook\n        onExecResult(result)\n\n        // Notify Discovery that the service was approved\n        return null\n      } else {\n        // Notify Discovery that the service was rejected\n        throw new Error(result?.reason || \"Service was declined\")\n      }\n    } catch (e: any) {\n      throw new Error(e?.message || \"Service execution failed\")\n    }\n  }\n","import {\n  createSessionProposal,\n  FLOW_METHODS,\n  getProvider,\n  request as wcRequest,\n} from \"@onflow/fcl-wc\"\nimport {DiscoveryNotification, DiscoveryRpc} from \"../requests\"\n\n// RPC handler for handling WalletConnect QR code requests\nexport const wcRequestHandlerFactory = ({\n  rpc,\n  network,\n  onExecResult,\n  authnBody,\n  abortSignal,\n}: {\n  rpc: DiscoveryRpc\n  network: string\n  onExecResult: (result: any) => void\n  authnBody: any\n  abortSignal: AbortSignal\n}) => {\n  const watchQr = watchQrFactory({\n    rpc,\n    authnBody,\n  })\n\n  return async ({}) => {\n    if (abortSignal.aborted) {\n      throw new Error(\"Handler has been terminated\")\n    }\n\n    const provider = await getProvider()\n\n    // Execute WC bypass if session is approved\n    const {uri, approval} = await createSessionProposal({\n      provider,\n      network,\n    })\n\n    // Watch for QR code connection asynchronously\n    watchQr({\n      uri,\n      approval,\n      onExecResult,\n    })\n\n    return {uri}\n  }\n}\n\nexport function watchQrFactory({\n  rpc,\n  authnBody,\n}: {\n  rpc: DiscoveryRpc\n  authnBody: any\n}) {\n  return ({\n    uri,\n    approval,\n    onExecResult,\n  }: {\n    uri: string\n    onExecResult: (result: any) => void\n    approval: any\n  }) => {\n    // Watch for QR code connection & resolve callback if connected\n    setTimeout(async () => {\n      try {\n        const provider = await getProvider()\n        const session = await approval()\n        rpc.notify(DiscoveryNotification.NOTIFY_QRCODE_CONNECTING, {\n          uri,\n        })\n\n        const result = await wcRequest({\n          method: FLOW_METHODS.FLOW_AUTHN,\n          body: authnBody,\n          session,\n          provider,\n        })\n\n        rpc.notify(DiscoveryNotification.NOTIFY_QRCODE_CONNECTED, {\n          uri,\n        })\n        onExecResult(result)\n      } catch (e: any) {\n        rpc.notify(DiscoveryNotification.NOTIFY_QRCODE_ERROR, {\n          uri,\n          error: e?.message,\n        })\n      }\n    }, 0)\n  }\n}\n","import {RpcClient} from \"@onflow/util-rpc\"\nimport {DiscoveryRpc, FclRequest} from \"./requests\"\nimport {execServiceHandlerFactory} from \"./handlers/exec-service\"\nimport {wcRequestHandlerFactory} from \"./handlers/request-wc-qr\"\n\n// Initialize the discovery RPC client\nexport function createDiscoveryRpcClient({\n  onExecResult,\n  body,\n  opts,\n  args,\n  abortSignal,\n}: {\n  onExecResult: (result: any) => void\n  body: any\n  opts: any\n  args: any\n  abortSignal: AbortSignal\n}) {\n  const rpc: DiscoveryRpc = new RpcClient({\n    notifications: [],\n  })\n\n  rpc.on(\n    FclRequest.REQUEST_WALLETCONNECT_QRCODE,\n    wcRequestHandlerFactory({\n      network: opts.config.client.network,\n      rpc,\n      onExecResult,\n      authnBody: body,\n      abortSignal,\n    })\n  )\n  rpc.on(\n    FclRequest.EXEC_SERVICE,\n    execServiceHandlerFactory({\n      onExecResult,\n      execStrategyOpts: opts,\n      execStrategyArgs: args,\n      abortSignal,\n    })\n  )\n\n  return {\n    connect: rpc.connect.bind(rpc),\n    receive: rpc.receive.bind(rpc),\n  }\n}\n","import {execStrategy} from \"@onflow/fcl-core\"\n\nexport async function execDiscovery({\n  customRpc,\n  opts,\n  args,\n  abortSignal,\n}: {\n  customRpc: any\n  opts: any\n  args: any\n  abortSignal: any\n}) {\n  // Update the discovery config to enable RPC support\n  const discoveryConfig = {\n    ...opts.config,\n    client: {\n      ...opts.config.client,\n      discoveryRpcEnabled: true,\n    },\n  }\n\n  // Execute base discovery request\n  return execStrategy(\n    {\n      ...opts,\n      config: discoveryConfig,\n      customRpc,\n      abortSignal,\n    },\n    // @ts-ignore - Pass the rest of the arguments (protect against future changes)\n    ...args.slice(1)\n  )\n}\n","import {execStrategy} from \"@onflow/fcl-core\"\nimport {wrapAbortSignal} from \"../utils/async\"\nimport {createDiscoveryRpcClient} from \"./rpc/client\"\nimport {execDiscovery} from \"./exec-discovery\"\n\nconst AUTHN_SERVICE_TYPE = \"authn\"\n\n// Defines the execStrategy hook for Discovery Service\n// Used to define custom service execution rules for the Discovery Service\nexport async function execStrategyHook(...args: any) {\n  const [opts] = args\n  const {body, abortSignal: baseAbortSignal, service} = opts\n\n  // Ensure the service type is \"auth\" for the execStrategyHook\n  if (service?.type !== AUTHN_SERVICE_TYPE) {\n    console.error(\n      `ERROR: Invalid service type for FCL Discovery execStrategyHook, expected \"${AUTHN_SERVICE_TYPE}\" but got \"${service?.type}\"`\n    )\n    return (execStrategy as any)(...args)\n  }\n\n  // Create an abort controller for this context\n  // Either used to terminate WC bypass proposal loop or the base discovery request\n  const abortController = wrapAbortSignal(baseAbortSignal)\n\n  let discoveryPromise: Promise<any> | undefined\n  const resultPromise = new Promise(async (resolve, reject) => {\n    // Initialize the discovery RPC client\n    const rpc = createDiscoveryRpcClient({\n      onExecResult: resolve,\n      body,\n      opts,\n      args,\n      abortSignal: abortController.signal,\n    })\n\n    // Execute the base discovery request\n    discoveryPromise = execDiscovery({\n      customRpc: rpc,\n      opts,\n      args,\n      abortSignal: abortController.signal,\n    }).then(resolve, reject)\n  })\n\n  // Wait for the result promise to resolve or reject\n  await resultPromise.catch(() => {})\n\n  // Give Discovery time to cleanup\n  await Promise.race([\n    new Promise(resolve => setTimeout(resolve, 1000)),\n    discoveryPromise,\n  ]).catch(() => {})\n\n  // Ensure the abort signal is propagated to all candidates on completion\n  abortController.abort()\n\n  // Return the result\n  return resultPromise\n}\n","import {config, type config as _config} from \"@onflow/config\"\nimport {pluginRegistry} from \"@onflow/fcl-core\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport * as fclWc from \"@onflow/fcl-wc\"\nimport {CoreTypes} from \"@walletconnect/types\"\n\nexport const isServer = typeof window === \"undefined\"\n\nconst getMetadata = (config: {\n  appDetailTitle?: string | null\n  appDetailIcon?: string | null\n  appDetailDescription?: string | null\n  appDetailUrl?: string | null\n}): CoreTypes.Metadata => {\n  const appTitle = config.appDetailTitle\n  const appIcon = config.appDetailIcon\n  const appDescription = config.appDetailDescription\n  const appUrl = config.appDetailUrl\n\n  return {\n    name: appTitle ?? document.title,\n    description: appDescription ?? \"\",\n    url: appUrl ?? window.location.origin,\n    icons: appIcon ? [appIcon] : [],\n  }\n}\n\n// Use previous configuration to check for changes & notify the user that this is not possible\nlet lastConfig: string | null = null\n\n// Only the first configuration will be used\nlet hasLoaded = false\n\nexport function initFclWcLoader() {\n  config.subscribe(async (fullConfig: any) => {\n    const wcConfig = {\n      walletConnectProjectId: fullConfig[\"walletconnect.projectId\"],\n      walletConnectDisableNotifications:\n        fullConfig[\"walletconnect.disableNotifications\"],\n      appDetailTitle: fullConfig[\"app.detail.title\"],\n      appDetailIcon: fullConfig[\"app.detail.icon\"],\n      appDetailDescription: fullConfig[\"app.detail.description\"],\n      appDetailUrl: fullConfig[\"app.detail.url\"],\n    }\n    loadFclWc(wcConfig)\n  })\n}\n\nexport function loadFclWc(wcConfig: {\n  walletConnectProjectId?: string | null\n  walletConnectDisableNotifications?: boolean | null\n  appDetailTitle?: string | null\n  appDetailIcon?: string | null\n  appDetailDescription?: string | null\n  appDetailUrl?: string | null\n}) {\n  // We cannot load WalletConnect plugin on server side\n  if (isServer) {\n    return\n  }\n\n  const projectId: string | undefined | null = wcConfig.walletConnectProjectId\n  const disableNotifications: boolean | undefined | null =\n    wcConfig.walletConnectDisableNotifications\n\n  // Check if the plugin is already loaded by this loader, but with different configuration\n  // The plugin can only be loaded once\n  const previousConfig = lastConfig\n  lastConfig = JSON.stringify(wcConfig, null, 2)\n  if (hasLoaded) {\n    if (previousConfig !== lastConfig) {\n      console.warn(\n        `FCL WalletConnect Plugin has been already loaded with different configuration. It is not possible to change the configuration after the plugin has been loaded.\n\nPrevious configuration:\n${previousConfig}\n\nCurrent configuration:\n${lastConfig}`\n      )\n    }\n    return\n  }\n\n  // If the configuration is not set, we do not load the plugin\n  const isConfigured = !!projectId\n  if (!isConfigured) {\n    return\n  }\n\n  invariant(\n    !!projectId,\n    \"FCL Configuration value for 'walletconnect.projectId' is required\"\n  )\n\n  // Check if the plugin is already loaded manually\n  // Usually this won't happen as it is more likely that the plugin will be loaded by this loader\n  // before the developer has a chance to load it manually, but it's good to check\n  if (pluginRegistry.getPlugins().has(fclWc.SERVICE_PLUGIN_NAME)) {\n    if (!hasLoaded) {\n      console.warn(\n        \"It seems like the FCL WalletConnect plugins has been already loaded manually. This is no longer necessary, please see the documentation for more information.\"\n      )\n    }\n    hasLoaded = true\n    return\n  }\n  hasLoaded = true\n\n  // Load the plugin if not already loaded\n  // We must lazy load the plugin to avoid race conditions\n  // where the developer attempts to use the plugin before\n  // our loader applies the configuration\n  const {providerPromise: _clientPromise, FclWcServicePlugin} = fclWc.initLazy({\n    projectId,\n    metadata: getMetadata(wcConfig),\n    disableNotifications: disableNotifications ?? undefined,\n  })\n  pluginRegistry.add([FclWcServicePlugin])\n}\n","import {\n  createFlowClientCore,\n  SdkTransport,\n  StorageProvider,\n} from \"@onflow/fcl-core\"\nimport {LOCAL_STORAGE} from \"./fcl\"\nimport {execStrategyHook} from \"./discovery/exec-hook\"\nimport {loadFclWc} from \"./utils/walletconnect/loader\"\n\nconst PLATFORM = \"web\"\n\nexport const discoveryOpts = {\n  execStrategy: execStrategyHook,\n}\n\nexport interface FlowClientConfig {\n  // Core network configuration (most commonly used)\n  accessNodeUrl: string // Required - must specify which network to connect to\n  flowNetwork?: string\n  flowJson?: any\n\n  // Wallet/Discovery configuration\n  discoveryWallet?: string\n  discoveryWalletMethod?: string\n  discoveryAuthnEndpoint?: string\n  discoveryAuthnInclude?: string[]\n\n  // WalletConnect configuration\n  walletconnectProjectId?: string\n  walletconnectDisableNotifications?: boolean\n\n  // Storage configuration\n  storage?: StorageProvider\n\n  // App detail properties\n  appDetailTitle?: string\n  appDetailIcon?: string\n  appDetailDescription?: string\n  appDetailUrl?: string\n\n  // Service configuration\n  serviceOpenIdScopes?: string[]\n\n  // Advanced/SDK configuration (least commonly used)\n  transport?: SdkTransport\n  computeLimit?: number\n  customResolver?: any\n  customDecoders?: any\n}\n\nexport function createFlowClient(params: FlowClientConfig) {\n  // TODO: Load into the global plugin registry for now.  This should be\n  // refactored to use a plugin registry bound to the client instance\n  // in the future.\n  loadFclWc({\n    walletConnectProjectId: params.walletconnectProjectId,\n    walletConnectDisableNotifications: params.walletconnectDisableNotifications,\n    appDetailTitle: params.appDetailTitle,\n    appDetailIcon: params.appDetailIcon,\n    appDetailDescription: params.appDetailDescription,\n    appDetailUrl: params.appDetailUrl,\n  })\n\n  const fclCore = createFlowClientCore({\n    flowNetwork: params.flowNetwork,\n    flowJson: params.flowJson,\n    accessNodeUrl: params.accessNodeUrl,\n    computeLimit: params.computeLimit || 9999,\n    transport: params.transport,\n    platform: PLATFORM,\n    storage: params.storage || LOCAL_STORAGE,\n    discovery: discoveryOpts,\n    discoveryWalletMethod: params.discoveryWalletMethod || \"IFRAME/RPC\",\n    discoveryAuthnEndpoint: params.discoveryAuthnEndpoint,\n    discoveryAuthnInclude: params.discoveryAuthnInclude,\n    customResolver: params.customResolver,\n    customDecoders: params.customDecoders,\n    discoveryWallet: params.discoveryWallet,\n    appDetailTitle: params.appDetailTitle,\n    appDetailIcon: params.appDetailIcon,\n    appDetailDescription: params.appDetailDescription,\n    appDetailUrl: params.appDetailUrl,\n    serviceOpenIdScopes: params.serviceOpenIdScopes,\n  })\n\n  return {\n    ...fclCore,\n  }\n}\n","import {invariant} from \"@onflow/util-invariant\"\n\nconst FRAME = \"FCL_IFRAME\"\n\nconst FRAME_STYLES = `\n  position:fixed;\n  top: 0px;\n  right: 0px;\n  bottom: 0px;\n  left: 0px;\n  height: 100%;\n  width: 100vw;\n  display:block;\n  background:rgba(0,0,0,0.25);\n  z-index: 2147483647;\n  box-sizing: border-box;\n  color-scheme: light;\n`\n\nexport function renderFrame(src) {\n  invariant(\n    !document.getElementById(FRAME),\n    \"Attempt at triggering multiple Frames\",\n    {src}\n  )\n\n  const $frame = document.createElement(\"iframe\")\n  $frame.src = src\n  $frame.id = FRAME\n  $frame.allow = \"usb *; hid *; clipboard-write\"\n  $frame.frameBorder = \"0\"\n  $frame.style.cssText = FRAME_STYLES\n  document.body.append($frame)\n\n  const unmount = () => {\n    if (document.getElementById(FRAME)) {\n      document.getElementById(FRAME).remove()\n    }\n  }\n\n  return [$frame.contentWindow, unmount]\n}\n","const POP = \"FCL_POP\"\n\nlet popup = null\nlet previousUrl = null\n\nfunction popupWindow(url, windowName, win, w, h) {\n  const y = win.top.outerHeight / 2 + win.top.screenY - h / 2\n  const x = win.top.outerWidth / 2 + win.top.screenX - w / 2\n  const popup = win.open(\n    url,\n    windowName,\n    `toolbar=no, location=no, directories=no, status=no, menubar=no, scrollbars=no, resizable=no, copyhistory=no, width=${w}, height=${h}, top=${y}, left=${x}`\n  )\n  if (!popup)\n    throw new Error(\"Popup failed to open (was it blocked by a popup blocker?)\")\n  return popup\n}\n\nexport function renderPop(src) {\n  if (popup == null || popup?.closed) {\n    popup = popupWindow(src, POP, window, 640, 770)\n  } else if (previousUrl !== src) {\n    popup.location.replace(src)\n    popup.focus()\n  } else {\n    popup.focus()\n  }\n\n  previousUrl = src\n\n  const unmount = () => {\n    if (popup && !popup.closed) {\n      popup.close()\n    }\n    popup = null\n  }\n\n  return [popup, unmount]\n}\n","const TAB = \"FCL_TAB\"\n\nlet tab = null\nlet previousUrl = null\n\nexport function renderTab(src) {\n  if (tab == null || tab?.closed) {\n    tab = window.open(src, \"_blank\")\n    if (!tab)\n      throw new Error(\"Tab failed to open (was it blocked by the browser?)\")\n  } else if (previousUrl !== src) {\n    tab.location.replace(src)\n    tab.focus()\n  } else {\n    tab.focus()\n  }\n\n  previousUrl = src\n\n  const unmount = () => {\n    if (tab && !tab.closed) {\n      tab.close()\n    }\n    tab = null\n  }\n\n  return [tab, unmount]\n}\n","export const getDefaultConfig = () => {\n  return {\n    \"discovery.wallet.method.default\": \"IFRAME/RPC\",\n  }\n}\n","import {renderFrame} from \"../../render-frame\"\nimport {buildMessageHandler, serviceEndpoint} from \"@onflow/fcl-core\"\n\nconst noop = () => {}\n\nexport function frame(service, opts = {}) {\n  if (service == null) return {send: noop, close: noop}\n\n  const onClose = opts.onClose || noop\n  const onMessage = opts.onMessage || noop\n  const onReady = opts.onReady || noop\n  const onResponse = opts.onResponse || noop\n  const onCustomRpc = opts.onCustomRpc || noop\n\n  let $frame, unmount\n  const handler = buildMessageHandler({\n    close,\n    send,\n    onReady,\n    onResponse,\n    onMessage,\n    onCustomRpc,\n    getSource: () => $frame,\n  })\n  window.addEventListener(\"message\", handler)\n  ;[$frame, unmount] = renderFrame(serviceEndpoint(service))\n  return {send, close}\n\n  function close() {\n    try {\n      window.removeEventListener(\"message\", handler)\n      unmount()\n      onClose()\n    } catch (error) {\n      console.error(\"Frame Close Error\", error)\n    }\n  }\n\n  function send(msg) {\n    try {\n      $frame.postMessage(JSON.parse(JSON.stringify(msg || {})), \"*\")\n    } catch (error) {\n      console.error(\"Frame Send Error\", msg, error)\n    }\n  }\n}\n","declare const PACKAGE_CURRENT_VERSION: string | undefined\n\nexport const VERSION: string = PACKAGE_CURRENT_VERSION || \"TESTVERSION\"\n","import {uid} from \"@onflow/util-uid\"\nimport {frame} from \"./utils/frame\"\nimport {normalizePollingResponse} from \"@onflow/fcl-core\"\nimport {VERSION} from \"../../../VERSION\"\n\nexport function execIframeRPC({\n  service,\n  body,\n  config,\n  customRpc,\n  abortSignal,\n  opts,\n}) {\n  return new Promise((resolve, reject) => {\n    const id = uid()\n    const includeOlderJsonRpcCall = opts.includeOlderJsonRpcCall\n\n    const {close} = frame(service, {\n      async onReady(_, {send}) {\n        try {\n          send({\n            type: \"FCL:VIEW:READY:RESPONSE\",\n            fclVersion: VERSION,\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n              type: service.type,\n            },\n            config,\n          })\n          send({\n            fclVersion: VERSION,\n            type: \"FCL:FRAME:READY:RESPONSE\",\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n              type: service.type,\n            },\n            config,\n            deprecated: {\n              message:\n                \"FCL:FRAME:READY:RESPONSE is deprecated and replaced with type: FCL:VIEW:READY:RESPONSE\",\n            },\n          })\n          if (includeOlderJsonRpcCall) {\n            send({\n              jsonrpc: \"2.0\",\n              id: id,\n              method: \"fcl:sign\",\n              params: [body, service.params],\n              deprecated: {\n                message:\n                  \"jsonrpc is deprecated and replaced with type: FCL:VIEW:READY:RESPONSE\",\n              },\n            })\n          }\n\n          customRpc?.connect({\n            send: msg => {\n              send({\n                type: \"FCL:VIEW:CUSTOM_RPC\",\n                payload: msg,\n              })\n            },\n          })\n        } catch (error) {\n          throw error\n        }\n      },\n\n      onResponse(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          const resp = normalizePollingResponse(e.data)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execIframeRPC onResponse error\", error)\n          throw error\n        }\n      },\n\n      onMessage(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          if (e.data.jsonrpc !== \"2.0\") return\n          if (e.data.id !== id) return\n          const resp = normalizePollingResponse(e.data.result)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execIframeRPC onMessage error\", error)\n          throw error\n        }\n      },\n\n      onClose() {\n        reject(`Declined: Externally Halted`)\n      },\n\n      onCustomRpc(msg) {\n        customRpc?.receive(msg)\n      },\n    })\n\n    if (abortSignal) {\n      if (abortSignal.aborted) {\n        reject(`Declined: Aborted`)\n        close()\n      }\n      abortSignal.addEventListener(\"abort\", () => {\n        reject(`Declined: Aborted`)\n        close()\n      })\n    }\n  })\n}\n","import {renderPop} from \"../../render-pop\"\nimport {buildMessageHandler, serviceEndpoint} from \"@onflow/fcl-core\"\n\nconst noop = () => {}\n\nexport function pop(service, opts = {}) {\n  if (service == null) return {send: noop, close: noop}\n\n  const onClose = opts.onClose || noop\n  const onMessage = opts.onMessage || noop\n  const onReady = opts.onReady || noop\n  const onResponse = opts.onResponse || noop\n  const onCustomRpc = opts.onCustomRpc || noop\n\n  let $pop, unmount\n  const handler = buildMessageHandler({\n    close,\n    send,\n    onReady,\n    onResponse,\n    onMessage,\n    onCustomRpc,\n    getSource: () => $pop,\n  })\n  window.addEventListener(\"message\", handler)\n  ;[$pop, unmount] = renderPop(serviceEndpoint(service))\n\n  const timer = setInterval(function () {\n    if ($pop && $pop.closed) {\n      close()\n    }\n  }, 500)\n\n  return {send, close}\n\n  function close() {\n    try {\n      window.removeEventListener(\"message\", handler)\n      clearInterval(timer)\n      unmount()\n      onClose()\n    } catch (error) {\n      console.error(\"Popup Close Error\", error)\n    }\n  }\n\n  function send(msg) {\n    try {\n      $pop.postMessage(JSON.parse(JSON.stringify(msg || {})), \"*\")\n    } catch (error) {\n      console.error(\"Popup Send Error\", msg, error)\n    }\n  }\n}\n","import {uid} from \"@onflow/util-uid\"\nimport {pop} from \"./utils/pop\"\nimport {normalizePollingResponse} from \"@onflow/fcl-core\"\nimport {VERSION} from \"../../../VERSION\"\n\nexport function execPopRPC({\n  service,\n  body,\n  config,\n  abortSignal,\n  customRpc,\n  opts,\n}) {\n  return new Promise((resolve, reject) => {\n    const id = uid()\n    const {redir, includeOlderJsonRpcCall} = opts\n\n    const {close} = pop(service, {\n      customRpc,\n      async onReady(_, {send}) {\n        try {\n          send({\n            fclVersion: VERSION,\n            type: \"FCL:VIEW:READY:RESPONSE\",\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n              type: service.type,\n            },\n            config,\n          })\n          send({\n            fclVersion: VERSION,\n            type: \"FCL:FRAME:READY:RESPONSE\",\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n              type: service.type,\n            },\n            config,\n            deprecated: {\n              message:\n                \"FCL:FRAME:READY:RESPONSE is deprecated and replaced with type: FCL:VIEW:READY:RESPONSE\",\n            },\n          })\n          if (includeOlderJsonRpcCall) {\n            send({\n              jsonrpc: \"2.0\",\n              id: id,\n              method: \"fcl:sign\",\n              params: [body, service.params],\n            })\n          }\n\n          customRpc?.connect({\n            send: msg => {\n              send({\n                type: \"FCL:VIEW:CUSTOM_RPC\",\n                payload: msg,\n              })\n            },\n          })\n        } catch (error) {\n          throw error\n        }\n      },\n\n      onResponse(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          const resp = normalizePollingResponse(e.data)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              !redir && close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execPopRPC onResponse error\", error)\n          throw error\n        }\n      },\n\n      onMessage(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          if (e.data.jsonrpc !== \"2.0\") return\n          if (e.data.id !== id) return\n          const resp = normalizePollingResponse(e.data.result)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              !redir && close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execPopRPC onMessage error\", error)\n          throw error\n        }\n      },\n\n      onClose() {\n        reject(`Declined: Externally Halted`)\n      },\n\n      onCustomRpc(msg) {\n        customRpc?.receive(msg)\n      },\n    })\n\n    if (abortSignal) {\n      if (abortSignal.aborted) {\n        reject(`Declined: Aborted`)\n        close()\n      }\n      abortSignal.addEventListener(\"abort\", () => {\n        reject(`Declined: Aborted`)\n        close()\n      })\n    }\n  })\n}\n","import {renderTab} from \"../../render-tab\"\nimport {buildMessageHandler, serviceEndpoint} from \"@onflow/fcl-core\"\n\nconst noop = () => {}\n\nexport function tab(service, opts = {}) {\n  if (service == null) return {send: noop, close: noop}\n\n  const onClose = opts.onClose || noop\n  const onMessage = opts.onMessage || noop\n  const onReady = opts.onReady || noop\n  const onResponse = opts.onResponse || noop\n  const onCustomRpc = opts.onCustomRpc || noop\n\n  let $tab, unmount\n  const handler = buildMessageHandler({\n    close,\n    send,\n    onReady,\n    onResponse,\n    onMessage,\n    onCustomRpc,\n    getSource: () => $tab,\n  })\n  window.addEventListener(\"message\", handler)\n  ;[$tab, unmount] = renderTab(serviceEndpoint(service))\n  const timer = setInterval(function () {\n    if ($tab && $tab.closed) {\n      close()\n    }\n  }, 500)\n\n  return {send, close}\n\n  function close() {\n    try {\n      window.removeEventListener(\"message\", handler)\n      clearInterval(timer)\n      unmount()\n      onClose()\n    } catch (error) {\n      console.error(\"Tab Close Error\", error)\n    }\n  }\n\n  function send(msg) {\n    try {\n      $tab.postMessage(JSON.parse(JSON.stringify(msg || {})), \"*\")\n    } catch (error) {\n      console.error(\"Tab Send Error\", msg, error)\n    }\n  }\n}\n","import {uid} from \"@onflow/util-uid\"\nimport {tab} from \"./utils/tab\"\nimport {normalizePollingResponse} from \"@onflow/fcl-core\"\nimport {VERSION} from \"../../../VERSION\"\n\nexport function execTabRPC({\n  service,\n  body,\n  config,\n  abortSignal,\n  customRpc,\n  opts,\n}) {\n  return new Promise((resolve, reject) => {\n    const id = uid()\n    const {redir, includeOlderJsonRpcCall} = opts\n\n    const {close} = tab(service, {\n      customRpc,\n      async onReady(_, {send}) {\n        try {\n          send({\n            fclVersion: VERSION,\n            type: \"FCL:VIEW:READY:RESPONSE\",\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n              type: service.type,\n            },\n            config,\n          })\n          send({\n            fclVersion: VERSION,\n            type: \"FCL:FRAME:READY:RESPONSE\",\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n              type: service.type,\n            },\n            config,\n            deprecated: {\n              message:\n                \"FCL:FRAME:READY:RESPONSE is deprecated and replaced with type: FCL:VIEW:READY:RESPONSE\",\n            },\n          })\n          if (includeOlderJsonRpcCall) {\n            send({\n              jsonrpc: \"2.0\",\n              id: id,\n              method: \"fcl:sign\",\n              params: [body, service.params],\n            })\n          }\n\n          customRpc?.connect({\n            send: msg => {\n              send({\n                type: \"FCL:VIEW:CUSTOM_RPC\",\n                payload: msg,\n              })\n            },\n          })\n        } catch (error) {\n          throw error\n        }\n      },\n\n      onResponse(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          const resp = normalizePollingResponse(e.data)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              !redir && close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execPopRPC onResponse error\", error)\n          throw error\n        }\n      },\n\n      onMessage(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          if (e.data.jsonrpc !== \"2.0\") return\n          if (e.data.id !== id) return\n          const resp = normalizePollingResponse(e.data.result)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              !redir && close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execPopRPC onMessage error\", error)\n          throw error\n        }\n      },\n\n      onClose() {\n        reject(`Declined: Externally Halted`)\n      },\n\n      onCustomRpc(msg) {\n        customRpc?.receive(msg)\n      },\n    })\n\n    if (abortSignal) {\n      if (abortSignal.aborted) {\n        close()\n        reject(`Declined: Aborted`)\n      }\n      abortSignal.addEventListener(\"abort\", () => {\n        close()\n        reject(`Declined: Aborted`)\n      })\n    }\n  })\n}\n","import {buildMessageHandler} from \"@onflow/fcl-core\"\n\nconst noop = () => {}\n\nexport function extension(service, opts = {}) {\n  if (service == null) return {send: noop, close: noop}\n\n  const onClose = opts.onClose || noop\n  const onMessage = opts.onMessage || noop\n  const onReady = opts.onReady || noop\n  const onResponse = opts.onResponse || noop\n  const onCustomRpc = opts.onCustomRpc || noop\n\n  const handler = buildMessageHandler({\n    close,\n    send,\n    onReady,\n    onResponse,\n    onMessage,\n    onCustomRpc,\n  })\n  window.addEventListener(\"message\", handler)\n\n  send({service})\n\n  return {send, close}\n\n  function close() {\n    try {\n      window.removeEventListener(\"message\", handler)\n      onClose()\n    } catch (error) {\n      console.error(\"Ext Close Error\", error)\n    }\n  }\n\n  function send(msg) {\n    try {\n      window && window.postMessage(JSON.parse(JSON.stringify(msg || {})), \"*\")\n    } catch (error) {\n      console.error(\"Ext Send Error\", msg, error)\n    }\n  }\n}\n","import {extension} from \"./utils/extension\"\nimport {normalizePollingResponse} from \"@onflow/fcl-core\"\nimport {VERSION} from \"../../../VERSION\"\n\nexport function execExtRPC({\n  service,\n  body,\n  config,\n  abortSignal,\n  customRpc,\n  opts,\n}) {\n  return new Promise((resolve, reject) => {\n    const {close} = extension(service, {\n      async onReady(_, {send}) {\n        try {\n          send({\n            fclVersion: VERSION,\n            type: \"FCL:VIEW:READY:RESPONSE\",\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n              type: service.type,\n            },\n            config,\n          })\n\n          customRpc?.connect({\n            send: msg => {\n              send({\n                type: \"FCL:VIEW:CUSTOM_RPC\",\n                body: msg,\n              })\n            },\n          })\n        } catch (error) {\n          throw error\n        }\n      },\n\n      onResponse(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          const resp = normalizePollingResponse(e.data)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execExtRPC onResponse error\", error)\n          throw error\n        }\n      },\n\n      onClose() {\n        reject(`Declined: Externally Halted`)\n      },\n\n      onCustomRpc(msg) {\n        customRpc?.receive(msg)\n      },\n    })\n\n    if (abortSignal) {\n      if (abortSignal.aborted) {\n        close()\n        reject(`Declined: Aborted`)\n      }\n      abortSignal.addEventListener(\"abort\", () => {\n        close()\n        reject(`Declined: Aborted`)\n      })\n    }\n  })\n}\n","import {renderFrame} from \"./render-frame\"\nimport {renderPop} from \"./render-pop\"\nimport {renderTab} from \"./render-tab\"\n\nconst NOT_IMPLEMENTED = () => {\n  throw new Error(\"Strategy util has not been implemented on this platform\")\n}\n\nconst VIEWS = {\n  \"VIEW/IFRAME\": renderFrame,\n  \"VIEW/POP\": renderPop,\n  \"VIEW/TAB\": renderTab,\n  \"VIEW/MOBILE_BROWSER\": NOT_IMPLEMENTED,\n  \"VIEW/DEEPLINK\": NOT_IMPLEMENTED,\n}\n\nexport async function execLocal(service, opts = {serviceEndpoint: () => {}}) {\n  const {serviceEndpoint} = opts\n  try {\n    return VIEWS[service.method](serviceEndpoint(service), opts)\n  } catch (error) {\n    console.error(\"execLocal({service, opts = {}})\", error, {service, opts})\n    throw error\n  }\n}\n","import {CORE_STRATEGIES, getExecHttpPost} from \"@onflow/fcl-core\"\nimport {execIframeRPC} from \"./strategies/iframe-rpc\"\nimport {execPopRPC} from \"./strategies/pop-rpc\"\nimport {execTabRPC} from \"./strategies/tab-rpc\"\nimport {execExtRPC} from \"./strategies/ext-rpc\"\nimport {execLocal} from \"./exec-local\"\n\nexport const coreStrategies = {\n  [CORE_STRATEGIES[\"HTTP/RPC\"]]: getExecHttpPost(execLocal),\n  [CORE_STRATEGIES[\"HTTP/POST\"]]: getExecHttpPost(execLocal),\n  [CORE_STRATEGIES[\"IFRAME/RPC\"]]: execIframeRPC,\n  [CORE_STRATEGIES[\"POP/RPC\"]]: execPopRPC,\n  [CORE_STRATEGIES[\"TAB/RPC\"]]: execTabRPC,\n  [CORE_STRATEGIES[\"EXT/RPC\"]]: execExtRPC,\n}\n","import {StorageProvider} from \"@onflow/fcl-core\"\n\nconst isServerSide = () => typeof window === \"undefined\"\nconst safeParseJSON = (str?: string | null) => {\n  if (str == null) return null\n  try {\n    return JSON.parse(str)\n  } catch (error) {\n    return null\n  }\n}\n\nexport const SESSION_STORAGE = {\n  can: !isServerSide() && !!window.sessionStorage,\n  get: async (key: string) => safeParseJSON(sessionStorage.getItem(key)),\n  put: async (key: string, value: any) =>\n    sessionStorage.setItem(key, JSON.stringify(value)),\n} as StorageProvider\n\nexport const LOCAL_STORAGE = {\n  can: !isServerSide() && !!window.localStorage,\n  get: async (key: string) => safeParseJSON(localStorage.getItem(key)),\n  put: async (key: string, value: any) =>\n    localStorage.setItem(key, JSON.stringify(value)),\n} as StorageProvider\n","export {\n  VERSION,\n  query,\n  queryRaw,\n  verifyUserSignatures,\n  serialize,\n  tx,\n  events,\n  pluginRegistry,\n  discovery,\n  t,\n  WalletUtils,\n  AppUtils,\n  InteractionTemplateUtils,\n  getChainId,\n  TestUtils,\n  config,\n  flowMainnet,\n  flowTestnet,\n  flowEmulator,\n  send,\n  decode,\n  account,\n  block,\n  isOk,\n  isBad,\n  why,\n  pipe,\n  build,\n  withPrefix,\n  sansPrefix,\n  display,\n  cadence,\n  cdc,\n  createSignableVoucher,\n  voucherIntercept,\n  voucherToTxId,\n  transaction,\n  script,\n  ping,\n  atBlockHeight,\n  atBlockId,\n  getAccount,\n  getEvents,\n  getEventsAtBlockHeightRange,\n  getEventsAtBlockIds,\n  getBlock,\n  getBlockHeader,\n  getCollection,\n  getTransactionStatus,\n  getTransaction,\n  getNetworkParameters,\n  getNodeVersionInfo,\n  authorizations,\n  authorization,\n  args,\n  arg,\n  proposer,\n  payer,\n  limit,\n  ref,\n  params,\n  param,\n  validator,\n  invariant,\n  subscribeEvents,\n  nodeVersionInfo,\n  TransactionError,\n} from \"@onflow/fcl-core\"\n\nimport {\n  getMutate,\n  getCurrentUser,\n  initServiceRegistry,\n  StorageProvider,\n} from \"@onflow/fcl-core\"\nimport {discoveryOpts} from \"./client\"\n\n/**\n * @description The main current user service for managing user authentication and authorization in Flow applications.\n * This service provides a complete interface for wallet connections, user sessions, transaction signing, and user data management.\n * It handles the complexity of connecting to various FCL-compatible wallets, managing authentication state, and providing\n * authorization functions for transaction signing.\n *\n * The currentUser service is configured for web platforms and uses the browser's localStorage by default for session persistence.\n * It integrates with Flow's discovery service to enable wallet selection and supports both authentication and re-authentication flows.\n *\n * This service is reactive and provides subscription capabilities to monitor authentication state changes in real-time.\n * All wallet interactions are handled through FCL's standardized protocols, ensuring compatibility with the Flow ecosystem.\n *\n * Returns an object with the following methods:\n * ```typescript\n * {\n *   authenticate,        // Authenticates the user via FCL-compatible wallets\n *   unauthenticate,      // Logs out the current user and clears session data\n *   authorization,       // Produces authorization details for transaction signing\n *   signUserMessage,     // Signs arbitrary messages with the user's wallet\n *   subscribe,           // Subscribes to authentication state changes\n *   snapshot,            // Returns the current user object snapshot\n *   resolveArgument      // Resolves the current user as a transaction argument\n * }\n * ```\n *\n * @returns A CurrentUserService object\n *\n * @example\n * // Basic authentication flow\n * import * as fcl from \"@onflow/fcl\"\n *\n * // Configure FCL\n * fcl.config({\n *   \"accessNode.api\": \"https://rest-testnet.onflow.org\",\n *   \"discovery.wallet\": \"https://fcl-discovery.onflow.org/testnet/authn\",\n *   \"flow.network\": \"testnet\"\n * })\n *\n * // Authenticate user\n * const user = await fcl.currentUser.authenticate()\n * console.log(\"User authenticated:\", user.addr)\n *\n * // Check authentication status\n * const currentUser = await fcl.currentUser.snapshot()\n * if (currentUser.loggedIn) {\n *   console.log(\"User is logged in:\", currentUser.addr)\n * }\n *\n * // Subscribe to authentication state changes\n * import * as fcl from \"@onflow/fcl\"\n *\n * const unsubscribe = fcl.currentUser.subscribe((user) => {\n *   if (user.loggedIn) {\n *     console.log(\"User logged in:\", user.addr)\n *     document.getElementById(\"login-btn\").style.display = \"none\"\n *     document.getElementById(\"logout-btn\").style.display = \"block\"\n *   } else {\n *     console.log(\"User logged out\")\n *     document.getElementById(\"login-btn\").style.display = \"block\"\n *     document.getElementById(\"logout-btn\").style.display = \"none\"\n *   }\n * })\n * // Clean up subscription when component unmounts\n * window.addEventListener(\"beforeunload\", () => unsubscribe())\n */\nexport const currentUser = getCurrentUser({\n  platform: \"web\",\n  discovery: discoveryOpts,\n  getStorageProvider: async () => {\n    return (\n      (await config.get<StorageProvider | null>(\"fcl.storage\")) || LOCAL_STORAGE\n    )\n  },\n})\n\n/**\n * @description A transaction execution function that allows you to submit Cadence transactions to the Flow blockchain\n * to mutate on-chain state. This function handles the complete transaction lifecycle including building, signing, and\n * sending transactions to Flow. It provides a high-level interface that abstracts the complexity of transaction\n * construction while offering flexibility for advanced use cases.\n *\n * The mutate function automatically handles authorization using the current authenticated user by default, but allows\n * for custom authorization functions to be specified for different transaction roles (proposer, payer, authorizer).\n * It supports both simple single-party transactions and complex multi-party transactions with different signatories.\n *\n * This function integrates with FCL's address replacement system, allowing you to use placeholder addresses in your\n * Cadence code that are replaced with actual addresses at execution time. It also supports Interaction Templates\n * for standardized transaction execution patterns.\n *\n * The mutate function accepts a configuration object with the following structure:\n * ```typescript\n * {\n *   cadence?: string,                    // The Cadence transaction code to execute (required if template not provided)\n *   args?: Function,                     // Function that returns an array of arguments for the transaction\n *   template?: any,                      // Interaction Template object or URL for standardized transactions\n *   limit?: number,                      // Compute (gas) limit for the transaction execution\n *   authz?: AccountAuthorization,        // Authorization function for all signatory roles (proposer, payer, authorizer)\n *   proposer?: AccountAuthorization,     // Specific authorization function for the proposer role\n *   payer?: AccountAuthorization,        // Specific authorization function for the payer role\n *   authorizations?: AccountAuthorization[]  // Array of authorization functions for authorizer roles\n * }\n * ```\n *\n * @param opts Transaction configuration options\n *\n * @returns Promise that resolves to the transaction ID (txId) when the transaction is submitted\n *\n * @throws Throws an error if transaction validation fails, required configuration is missing,\n * or transaction execution encounters an error\n *\n * @example\n * // Basic transaction submission\n * import * as fcl from \"@onflow/fcl\"\n *\n * // Configure FCL first\n * fcl.config({\n *   \"accessNode.api\": \"https://rest-testnet.onflow.org\",\n *   \"discovery.wallet\": \"https://fcl-discovery.onflow.org/testnet/authn\",\n *   \"flow.network\": \"testnet\"\n * })\n *\n * // Authenticate user\n * await fcl.authenticate()\n *\n * // Submit a basic transaction\n * const txId = await fcl.mutate({\n *   cadence: `\n *     transaction(message: String) {\n *       prepare(account: AuthAccount) {\n *         log(\"Transaction executed by: \".concat(account.address.toString()))\n *         log(\"Message: \".concat(message))\n *       }\n *     }\n *   `,\n *   args: (arg, t) => [\n *     arg(\"Hello Flow!\", t.String)\n *   ],\n *   limit: 50\n * })\n *\n * console.log(\"Transaction submitted:\", txId)\n */\nexport const mutate = getMutate(currentUser)\n\n/**\n * @description Calling this method will authenticate the current user via any wallet that supports FCL. Once called, FCL will initiate communication with the configured `discovery.wallet` endpoint which lets the user select a wallet to authenticate with. Once the wallet provider has authenticated the user, FCL will set the values on the current user object for future use and authorization.\n *\n * This method can only be used in web browsers.\n *\n * `discovery.wallet` value must be set in the configuration before calling this method. See FCL Configuration.\n *\n * The default discovery endpoint will open an iframe overlay to let the user choose a supported wallet.\n *\n * `authenticate` can also take a service returned from discovery with `fcl.authenticate({ service })`.\n *\n * @param opts Authentication options\n * @param opts.service Optional service to use for authentication. A service returned from discovery can be passed here.\n * @param opts.redir Optional redirect flag. Defaults to false.\n * @param opts.forceReauth Optional force re-authentication flag. Defaults to false.\n * @returns Promise that resolves to the authenticated CurrentUser object or undefined\n *\n * @example\n * import * as fcl from '@onflow/fcl';\n * fcl\n *   .config()\n *   .put('accessNode.api', 'https://rest-testnet.onflow.org')\n *   .put('discovery.wallet', 'https://fcl-discovery.onflow.org/testnet/authn');\n * // anywhere on the page\n * fcl.authenticate();\n */\nexport const authenticate = (opts = {}) => currentUser().authenticate(opts)\n\n/**\n * @description Logs out the current user and sets the values on the current user object to null.\n *\n * This method can only be used in web browsers.\n *\n * The current user must be authenticated first.\n *\n * @example\n * import * as fcl from '@onflow/fcl';\n * fcl.config().put('accessNode.api', 'https://rest-testnet.onflow.org');\n * // first authenticate to set current user\n * fcl.authenticate();\n * // ... somewhere else & sometime later\n * fcl.unauthenticate();\n * // fcl.currentUser.loggedIn === null\n */\nexport const unauthenticate = () => currentUser().unauthenticate()\n\n/**\n * @description A convenience method that calls `fcl.unauthenticate()` and then `fcl.authenticate()` for the current user.\n *\n * This method can only be used in web browsers.\n *\n * The current user must be authenticated first.\n *\n * @param opts Authentication options passed to authenticate method\n * @param opts.service Optional service to use for authentication\n * @param opts.redir Optional redirect flag. Defaults to false.\n * @param opts.forceReauth Optional force re-authentication flag. Defaults to false.\n * @returns Promise that resolves to the authenticated CurrentUser object or undefined\n *\n * @example\n * import * as fcl from '@onflow/fcl';\n * // first authenticate to set current user\n * fcl.authenticate();\n * // ... somewhere else & sometime later\n * fcl.reauthenticate();\n * // logs out user and opens up login/sign-up flow\n */\nexport const reauthenticate = (opts = {}) => {\n  currentUser().unauthenticate()\n  return currentUser().authenticate(opts)\n}\n\n/**\n * @description A convenience method that calls and is equivalent to `fcl.authenticate()`.\n *\n * This method can only be used in web browsers.\n *\n * @param opts Authentication options passed to authenticate method\n * @param opts.service Optional service to use for authentication\n * @param opts.redir Optional redirect flag. Defaults to false.\n * @param opts.forceReauth Optional force re-authentication flag. Defaults to false.\n * @returns Promise that resolves to the authenticated CurrentUser object or undefined\n *\n * @example\n * import * as fcl from '@onflow/fcl';\n * fcl.config()\n *   .put('accessNode.api', 'https://rest-testnet.onflow.org')\n *   .put('discovery.wallet', 'https://fcl-discovery.onflow.org/testnet/authn');\n *\n * // User clicks sign up button\n * fcl.signUp();\n */\nexport const signUp = (opts = {}) => currentUser().authenticate(opts)\n\n/**\n * @description A convenience method that calls and is equivalent to `fcl.authenticate()`.\n *\n * This method can only be used in web browsers.\n *\n * @param opts Authentication options passed to authenticate method\n * @param opts.service Optional service to use for authentication\n * @param opts.redir Optional redirect flag. Defaults to false.\n * @param opts.forceReauth Optional force re-authentication flag. Defaults to false.\n * @returns Promise that resolves to the authenticated CurrentUser object or undefined\n *\n * @example\n * import * as fcl from '@onflow/fcl';\n * fcl.config()\n *   .put('accessNode.api', 'https://rest-testnet.onflow.org')\n *   .put('discovery.wallet', 'https://fcl-discovery.onflow.org/testnet/authn');\n *\n * // User clicks log in button\n * fcl.logIn();\n */\nexport const logIn = (opts = {}) => currentUser().authenticate(opts)\n\n/**\n * @description A convenience method that produces the needed authorization details for the current user to submit transactions to Flow. It defines a signing function that connects to a user's wallet provider to produce signatures to submit transactions.\n *\n * You can replace this function with your own authorization function if needed.\n *\n * @returns An object containing the necessary details from the current user to authorize a transaction in any role.\n *\n * @example\n * import * as fcl from '@onflow/fcl';\n * // login somewhere before\n * fcl.authenticate();\n * // once logged in authz will produce values\n * console.log(fcl.authz);\n * // prints {addr, signingFunction, keyId, sequenceNum} from the current authenticated user.\n *\n * const txId = await fcl.mutate({\n *   cadence: `\n *     import Profile from 0xba1132bc08f82fe2\n *\n *     transaction(name: String) {\n *       prepare(account: auth(BorrowValue) &Account) {\n *         account.storage.borrow<&{Profile.Owner}>(from: Profile.privatePath)!.setName(name)\n *       }\n *     }\n *   `,\n *   args: (arg, t) => [arg('myName', t.String)],\n *   proposer: fcl.authz, // optional - default is fcl.authz\n *   payer: fcl.authz, // optional - default is fcl.authz\n *   authorizations: [fcl.authz], // optional - default is [fcl.authz]\n * });\n *\n * @note The default values for `proposer`, `payer`, and `authorizations` are already `fcl.authz` so there is no need to include these parameters, it is shown only for example purposes.\n */\nexport const authz = currentUser().authorization\n\nimport {config} from \"@onflow/config\"\nimport {getDefaultConfig, coreStrategies, LOCAL_STORAGE} from \"./utils/web\"\nimport {initFclWcLoader} from \"./utils/walletconnect/loader\"\n\nconfig(getDefaultConfig())\n\ninitServiceRegistry({coreStrategies})\n\n// Automatically load fcl-wc plugin\n// Based on the user's config\ninitFclWcLoader()\n\nexport {LOCAL_STORAGE, SESSION_STORAGE} from \"./utils/web\"\n\n// Subscriptions\nexport {subscribe, subscribeRaw} from \"@onflow/fcl-core\"\n\nexport * from \"@onflow/typedefs\"\n\nexport {createFlowClient, type FlowClientConfig} from \"./client\"\n"],"names":["AbortController","globalThis","require","wrapAbortSignal","signal","controller","aborted","abort","addEventListener","DiscoveryNotification","FclRequest","APPROVED","execServiceHandlerFactory","_ref","onExecResult","execStrategyOpts","execStrategyArgs","abortSignal","_ref2","service","result","execStrategy","config","slice","status","normalizePollingResponse","Error","reason","e","message","wcRequestHandlerFactory","rpc","network","authnBody","watchQr","watchQrFactory","provider","getProvider","uri","approval","createSessionProposal","_ref3","_ref4","setTimeout","session","notify","NOTIFY_QRCODE_CONNECTING","wcRequest","method","FLOW_METHODS","FLOW_AUTHN","body","NOTIFY_QRCODE_CONNECTED","NOTIFY_QRCODE_ERROR","error","createDiscoveryRpcClient","opts","args","RpcClient","notifications","on","REQUEST_WALLETCONNECT_QRCODE","client","EXEC_SERVICE","connect","bind","receive","execDiscovery","customRpc","discoveryConfig","discoveryRpcEnabled","AUTHN_SERVICE_TYPE","execStrategyHook","_len","arguments","length","Array","_key","baseAbortSignal","type","console","abortController","discoveryPromise","resultPromise","Promise","resolve","reject","then","catch","race","isServer","window","getMetadata","appTitle","appDetailTitle","appIcon","appDetailIcon","appDescription","appDetailDescription","appUrl","appDetailUrl","name","document","title","description","url","location","origin","icons","lastConfig","hasLoaded","initFclWcLoader","subscribe","fullConfig","wcConfig","walletConnectProjectId","walletConnectDisableNotifications","loadFclWc","projectId","disableNotifications","previousConfig","JSON","stringify","warn","isConfigured","invariant","pluginRegistry","getPlugins","has","fclWc","SERVICE_PLUGIN_NAME","providerPromise","_clientPromise","FclWcServicePlugin","initLazy","metadata","undefined","add","PLATFORM","discoveryOpts","createFlowClient","params","walletconnectProjectId","walletconnectDisableNotifications","fclCore","createFlowClientCore","flowNetwork","flowJson","accessNodeUrl","computeLimit","transport","platform","storage","LOCAL_STORAGE","discovery","discoveryWalletMethod","discoveryAuthnEndpoint","discoveryAuthnInclude","customResolver","customDecoders","discoveryWallet","serviceOpenIdScopes","FRAME","FRAME_STYLES","renderFrame","src","getElementById","$frame","createElement","id","allow","frameBorder","style","cssText","append","unmount","remove","contentWindow","POP","popup","previousUrl","popupWindow","windowName","win","w","h","y","top","outerHeight","screenY","x","outerWidth","screenX","open","renderPop","closed","replace","focus","close","tab","renderTab","getDefaultConfig","noop","frame","send","onClose","onMessage","onReady","onResponse","onCustomRpc","handler","buildMessageHandler","getSource","serviceEndpoint","removeEventListener","msg","postMessage","parse","VERSION","execIframeRPC","uid","includeOlderJsonRpcCall","_","fclVersion","data","deprecated","jsonrpc","payload","resp","pop","$pop","timer","setInterval","clearInterval","execPopRPC","redir","$tab","execTabRPC","extension","execExtRPC","NOT_IMPLEMENTED","VIEWS","execLocal","coreStrategies","CORE_STRATEGIES","getExecHttpPost","isServerSide","safeParseJSON","str","SESSION_STORAGE","can","sessionStorage","get","key","getItem","put","value","setItem","localStorage","currentUser","getCurrentUser","getStorageProvider","mutate","getMutate","authenticate","unauthenticate","reauthenticate","signUp","logIn","authz","authorization","initServiceRegistry"],"mappings":"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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACa6G,MAAM,GAAGC,SAAS,CAACJ,WAAW;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMK,YAAY,GAAG,YAAA;AAAA,EAAA,IAAChN,IAAI,GAAAkB,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAA8D,SAAA,GAAA9D,SAAA,CAAA,CAAA,CAAA,GAAG,EAAE;AAAA,EAAA,OAAKyL,WAAW,EAAE,CAACK,YAAY,CAAChN,IAAI,CAAC;AAAA;;AAE3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMiN,cAAc,GAAGA,MAAMN,WAAW,EAAE,CAACM,cAAc;;AAEhE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMC,cAAc,GAAG,YAAe;AAAA,EAAA,IAAdlN,IAAI,GAAAkB,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAA8D,SAAA,GAAA9D,SAAA,CAAA,CAAA,CAAA,GAAG,EAAE;AACtCyL,EAAAA,WAAW,EAAE,CAACM,cAAc,EAAE;AAC9B,EAAA,OAAON,WAAW,EAAE,CAACK,YAAY,CAAChN,IAAI,CAAC;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMmN,MAAM,GAAG,YAAA;AAAA,EAAA,IAACnN,IAAI,GAAAkB,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAA8D,SAAA,GAAA9D,SAAA,CAAA,CAAA,CAAA,GAAG,EAAE;AAAA,EAAA,OAAKyL,WAAW,EAAE,CAACK,YAAY,CAAChN,IAAI,CAAC;AAAA;;AAErE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMoN,KAAK,GAAG,YAAA;AAAA,EAAA,IAACpN,IAAI,GAAAkB,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAA8D,SAAA,GAAA9D,SAAA,CAAA,CAAA,CAAA,GAAG,EAAE;AAAA,EAAA,OAAKyL,WAAW,EAAE,CAACK,YAAY,CAAChN,IAAI,CAAC;AAAA;;AAEpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACaqN,KAAK,GAAGV,WAAW,EAAE,CAACW;AAMnCxP,MAAM,CAACmL,gBAAgB,EAAE,CAAC;AAE1BsE,mBAAmB,CAAC;AAAC5B,EAAAA;AAAc,CAAC,CAAC;;AAErC;AACA;AACApI,eAAe,EAAE;;;;"}