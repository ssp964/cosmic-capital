import { FCLContext } from "../../context";
export interface GetChainIdOptions {
    node?: unknown;
    enableRequestLogging?: boolean;
    [key: string]: any;
}
export declare function createGetChainId(context: {
    config: FCLContext["config"];
    sdk: FCLContext["sdk"];
}): (opts?: GetChainIdOptions) => Promise<string>;
/**
 * @description Clears the internal chain ID cache used by getChainId function. This is primarily useful
 * for testing scenarios where you need to reset the cached chain ID values, or when switching between
 * different access nodes and want to ensure fresh chain ID fetching.
 *
 * @example
 * // Clear cache during testing
 * import * as fcl from "@onflow/fcl"
 *
 * // Clear cache
 * fcl.clearChainIdCache()
 *
 * // Now getChainId will fetch fresh data
 * const chainId = await fcl.getChainId()
 */
export declare function clearChainIdCache(): void;
export declare const getChainId: (opts?: GetChainIdOptions) => Promise<string>;
