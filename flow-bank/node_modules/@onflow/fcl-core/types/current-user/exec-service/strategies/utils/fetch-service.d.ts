import { Service } from "@onflow/typedefs";
export interface FetchServiceOptions {
    method?: "GET" | "POST";
    data?: Record<string, any>;
    headers?: Record<string, string>;
}
/**
 * @description Makes an HTTP request to a service endpoint with the specified options.
 * This utility function handles the common patterns for communicating with wallet services
 * including proper headers, body serialization, and JSON response parsing.
 *
 * @param service The service configuration containing endpoint and headers
 * @param opts Optional request configuration including method, data, and headers
 * @returns Promise resolving to the parsed JSON response
 *
 * @example
 * // Fetch from a service endpoint
 * const response = await fetchService(service, {
 *   method: "POST",
 *   data: { transaction: "..." },
 *   headers: { "Authorization": "Bearer token" }
 * })
 */
export declare function fetchService(service: Service, opts?: FetchServiceOptions): Promise<any>;
