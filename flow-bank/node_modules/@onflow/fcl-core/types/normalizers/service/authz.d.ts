import { Service } from "@onflow/typedefs";
export interface AuthzService extends Service {
    id?: string;
    addr?: string;
    keyId?: number;
    identity?: any;
}
/**
 * @description Normalizes an authz service to ensure compatibility with FCL service format
 *
 * @param service The authz service to normalize
 * @returns The normalized authz service or null
 *
 * @example
 * const service = normalizeAuthz({
 *   f_type: "service",
 *   f_vsn: "1.0.0",
 *   type: "authz",
 *   uid: "uniqueDedupeKey",
 *   endpoint: "https://rawr",
 *   method: "HTTP/POST", // HTTP/POST | IFRAME/RPC | HTTP/RPC
 *   identity: {
 *     address: "0x______",
 *     keyId: 0,
 *   },
 *   data: {}, // included in body of authz request
 *   params: {}, // included as query params on endpoint url
 * })
 */
export declare function normalizeAuthz(service: AuthzService | null): AuthzService | null;
