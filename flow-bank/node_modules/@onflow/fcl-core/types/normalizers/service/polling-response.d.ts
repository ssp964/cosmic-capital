import { CompositeSignature } from "@onflow/typedefs";
export interface PollingResponse {
    f_type: "PollingResponse";
    f_vsn: "1.0.0";
    status: "PENDING" | "APPROVED" | "DECLINED" | "REDIRECT";
    reason: string | null;
    compositeSignature?: CompositeSignature;
    authorizationUpdates?: any;
    local: any;
    data?: any;
    updates?: any;
}
/**
 * @description Normalizes a polling response to ensure compatibility with FCL format
 *
 * @param resp The polling response to normalize
 * @returns The normalized polling response or null
 *
 * @example
 * const resp = normalizePollingResponse({
 *   f_type: "PollingResponse",
 *   f_vsn: "1.0.0",
 *   status: "PENDING", // PENDING | APPROVED | DECLINED | REDIRECT
 *   reason: null,      // Reason for Declining Transaction
 *   data: null,        // Return value for APPROVED
 *   updates: BackChannelRpc,
 *   local: Frame,
 * })
 */
export declare function normalizePollingResponse(resp: PollingResponse | null): PollingResponse | null;
